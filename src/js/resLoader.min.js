!function(a, b) {
    "function" == typeof define && define.amd ? define(b) : "object" == typeof exports ? module.exports = b() : a.resLoader = b(a)
} (this,function() {
    function b(a) {
        if (this.option = {
            resourceType : 'image,audio,ttf,js,script,font',//资源类型，默认为图片
            baseUrl : './', //基准url
            resources : [], //资源路径数组
            onStart : null, //加载开始回调函数，传入参数total
            onProgress : null, //正在加载回调函数，传入参数currentIndex, total
            onComplete : null //加载完毕回调函数，传入参数total
        },!a) return void alert("参数错误！");
        for (i in a) this.option[i] = a[i];
        this.status = 0; //加载器的状态，0：未启动   1：正在加载   2：加载完毕
        this.total = this.option.resources.length || 0; //资源总数
        this.currentIndex = 0; //当前正在加载的资源索引
    }
    var a = function(a) {
        return "function" == typeof a
    };
    return b.prototype.start = function() {
        this.status = 1;
        for (var b = this,c = this.option.baseUrl,d = 0,e = this.option.resources.length; e > d; d++) 
        {
        var f = this.option.resources[d],g = "";
        g = 0 === f.indexOf("http://") || 0 === f.indexOf("https://") ? f: c + f;
        var h = new Image;
        h.onload = function() {
            b.loaded()
        },
        h.onerror = function() {
            b.loaded()
        },
        h.src = g
    }
    a(this.option.onStart) && this.option.onStart(this.total)
},
b.prototype.loaded = function() {
    a(this.option.onProgress) && this.option.onProgress(++this.currentIndex, this.total),
    this.currentIndex === this.total && a(this.option.onComplete) && this.option.onComplete(this.total)
},
b
});
